---
- name: Define template's timestamp
  set_fact:
    template_timestamp: "{{ '%Y%m%d%H%M' | strftime(ansible_date_time.epoch) }}"

- name: Define template's name and annotation
  set_fact:
    template_name: "Template-{{ vm_role }}-{{ template_timestamp }}"
    template_annotation: "Template for {{ vm_role }} created on {{ template_timestamp }}"
    template_folder: "{{ vcenter_datacenter }}/vm/{{ template_folder }}"

- name: Show template's name
  debug:
    var: template_name

- name: Create Template VM for {{ vm_role }}
  register: new_vm
  vmware_guest:
    hostname: "{{ vcenter_hostname }}"
    username: "{{ vcenter_username }}"
    password: "{{ vcenter_password }}"
    validate_certs: "{{ vcenter_validate_certs }}"
    datacenter: "{{ vcenter_datacenter }}"
    cluster: "{{ vcenter_cluster }}"

    name: "{{ template_name }}"
    folder: "{{ template_folder }}"
    annotation: "{{ template_annotation }}"
    template: "{{ base_template }}"
    hardware: "{{ template_vars[vm_role].hardware }}"
    networks: "{{ template_vars[vm_role].networks }}"
    customization:
      hostname: "tmpl-{{ vm_role }}"
      fullname: "{{ windows_customization_user }}"
      password: "{{ windows_customization_pass }}"
    state: poweredon
    wait_for_ip_address: yes

# TODO: Windows sysprep initiates a reboot, which is recognized as false positive by wait_for_ip_address.
#       Need to find a better way to handle waiting for customization
- name: Wait for customization to finish
  wait_for:
    timeout: 300

- name: Add additional disks
  when: vm_hdd is defined
  script: >
    add_disk_to_vm.py
    --host '{{ vcenter_hostname }}'
    --user '{{ vcenter_username }}'
    --password '{{ vcenter_password }}'
    --uuid "{{ new_vm.instance.hw_product_uuid }}"
    --disk-type '{{ item.type }}'
    --disk-size '{{ item.size }}'
  with_items: "{{ vm_hdd }}"

- name: Reboot VM
  vmware_guest:
    hostname: "{{ vcenter_hostname }}"
    username: "{{ vcenter_username }}"
    password: "{{ vcenter_password }}"
    validate_certs: "{{ vcenter_validate_certs }}"
    datacenter: "{{ vcenter_datacenter }}"
    cluster: "{{ vcenter_cluster }}"

    name: "{{ template_name }}"
    folder: "{{ template_folder }}"

    state: rebootguest
    wait_for_ip_address: yes

- name: Get correct IP address of new {{ vm_role }}
  register: vm
  vmware_guest_facts:
    hostname: "{{ vcenter_hostname }}"
    username: "{{ vcenter_username }}"
    password: "{{ vcenter_password }}"
    validate_certs: "{{ vcenter_validate_certs }}"
    datacenter: "{{ vcenter_datacenter }}"

    uuid: "{{ new_vm.instance.hw_product_uuid }}"
  retries: 60
  delay: 15
  until: >
      vm.instance.hw_eth0.ipaddresses | ipv4 | reject("match", "169.254.*") | list

- name: Add host to inventory
  add_host:
    name: "{{ vm.instance.hw_name }}"
    ansible_host: "{{ vm.instance.hw_eth0.ipaddresses | ipv4 | first }}"
    groups: "template,{{ vm_role }}"
